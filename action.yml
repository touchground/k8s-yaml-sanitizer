name: 'Sanitize Kubernetes YAML'
description: 'Removes unnecessary fields from a Kubernetes YAML file'
inputs:
  inputYamlFile:
    description: 'Path to the Kubernetes YAML file'
    required: true
  outputYamlFile:
    description: 'Path to the sanitized Kubernetes YAML file'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Install yq
      uses: touchground/devops-tools@release
      with:
        yq: '4.42.1'

    - name: Sanitize Kubernetes YAML
      run: |
        INPUT=${{ inputs.inputYamlFile }}
        OUTPUT=${{ inputs.outputYamlFile }}

        echo "Sanitizing $INPUT..."
        if [ -f "$INPUT" ]; then
          if [ "$OUTPUT" = "" ]; then
            OUTPUT=$INPUT
            cp $INPUT $(dirname "$INPUT")/staging.yaml
            echo "Output: $OUTPUT"
            for i in {1..5}; do
              yq e '
                del(
                  .metadata.creationTimestamp,
                  .status,
                  .spec.loadBalancer,
                  .spec.clusterIP,
                  .spec.template.spec.dnsPolicy,
                  .spec.template.spec.metadata.creationTimestamp,
                  .spec.template.spec.restartPolicy,
                  .spec.template.spec.schedulerName,
                  .spec.template.spec.terminationGracePeriodSeconds,
                  .spec.template.spec.securityContext,
                  .spec.template.spec.serviceAccount,
                  .spec.template.spec.serviceAccountName,
                  .spec.template.spec.terminationGracePeriodSeconds
                )' $(dirname "$INPUT")/staging.yaml > $INPUT && break || sleep 0.1
            done
          else
            echo "Output: $OUTPUT"
            for i in {1..5}; do
              yq e '
                del(
                  .metadata.creationTimestamp,
                  .status,
                  .spec.loadBalancer,
                  .spec.clusterIP,
                  .spec.template.spec.dnsPolicy,
                  .spec.template.spec.metadata.creationTimestamp,
                  .spec.template.spec.restartPolicy,
                  .spec.template.spec.schedulerName,
                  .spec.template.spec.terminationGracePeriodSeconds,
                  .spec.template.spec.securityContext,
                  .spec.template.spec.serviceAccount,
                  .spec.template.spec.serviceAccountName,
                  .spec.template.spec.terminationGracePeriodSeconds
                )' $INPUT > $OUTPUT && break || sleep 0.1
            done
          fi
        else
          echo "File does not exist: $INPUT"
          exit 1;
        fi
        echo "======= Output ======="
        cat $OUTPUT
        
      shell: bash
