name: 'Sanitize Kubernetes YAML'
description: 'Removes unnecessary fields from a Kubernetes YAML file'
inputs:
  inputYamlFile:
    description: 'Path to the Kubernetes YAML file'
    required: true
  outputYamlFile:
    description: 'Path to the sanitized Kubernetes YAML file'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Sanitize Kubernetes YAML
      run: |
        INPUT=${{ inputs.inputYamlFile }}
        OUTPUT=${{ inputs.outputYamlFile }}

        echo "Sanitizing $INPUT..."
        if [ -f "$INPUT" ]; then
          if [ "$OUTPUT" = "" ]; then
            OUTPUT=$INPUT

            echo "Inplace cleanup."
            yq e -i '
              del(
                .metadata.creationTimestamp, 
                .status, 
                .spec.clusterIP, 
                .spec.template.spec.dnsPolicy, 
                .spec.template.spec.restartPolicy, 
                .spec.template.spec.schedulerName, 
                .spec.template.spec.terminationGracePeriodSeconds, 
                .spec.template.spec.securityContext, 
                .spec.template.spec.serviceAccount, 
                .spec.template.spec.serviceAccountName, 
                .spec.template.spec.terminationGracePeriodSeconds
              )' $INPUT 
          else
            echo "Generate new file."
            yq e '
              del(
                .metadata.creationTimestamp, 
                .status, 
                .spec.clusterIP, 
                .spec.template.spec.dnsPolicy, 
                .spec.template.spec.restartPolicy, 
                .spec.template.spec.schedulerName, 
                .spec.template.spec.terminationGracePeriodSeconds, 
                .spec.template.spec.securityContext, 
                .spec.template.spec.serviceAccount, 
                .spec.template.spec.serviceAccountName, 
                .spec.template.spec.terminationGracePeriodSeconds
              )' $INPUT > $OUTPUT
          fi
        else
          echo "File does not exist: $INPUT"
          exit 1;
        fi
        echo "======= Output ======="
        cat $OUTPUT
        
      shell: bash
