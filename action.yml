name: 'Sanitize Kubernetes YAML'
description: 'Removes unnecessary fields from a Kubernetes YAML file'
inputs:
  inputYamlFile:
    description: 'Path to the Kubernetes YAML file'
    required: true
  outputYamlFile:
    description: 'Path to the sanitized Kubernetes YAML file'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Install yq
      uses: touchground/devops-tools@release
      with:
        yq: '4.42.1'

    - name: Sanitize Kubernetes YAML
      run: |
        INPUT=${{ inputs.inputYamlFile }}
        OUTPUT=${{ inputs.outputYamlFile }}

        echo "Sanitizing $INPUT..."
        if [ -f "$INPUT" ]; then
          if [ "$OUTPUT" = "" ]; then
            cat $INPUT
            #OUTPUT="${INPUT%.*}_sanitized.${INPUT##*.}"
            OUTPUT=$INPUT

            echo "Output: $OUTPUT"
            sleep 0.5
            yq e -i '
              del(
                .metadata.creationTimestamp, 
                .status, 
                .spec.clusterIP, 
                .spec.template.spec.dnsPolicy, 
                .spec.template.spec.restartPolicy, 
                .spec.template.spec.schedulerName, 
                .spec.template.spec.terminationGracePeriodSeconds, 
                .spec.template.spec.securityContext, 
                .spec.template.spec.serviceAccount, 
                .spec.template.spec.serviceAccountName, 
                .spec.template.spec.terminationGracePeriodSeconds
              )' $INPUT
            rm $INPUT  # remove original file
          else
            echo "Output: $OUTPUT"
            yq e '
              del(
                .metadata.creationTimestamp, 
                .status, 
                .spec.clusterIP, 
                .spec.template.spec.dnsPolicy, 
                .spec.template.spec.restartPolicy, 
                .spec.template.spec.schedulerName, 
                .spec.template.spec.terminationGracePeriodSeconds, 
                .spec.template.spec.securityContext, 
                .spec.template.spec.serviceAccount, 
                .spec.template.spec.serviceAccountName, 
                .spec.template.spec.terminationGracePeriodSeconds
              )' $INPUT > $OUTPUT
          fi
        else
          echo "File does not exist: $INPUT"
          exit 1;
        fi
        echo "======= Output ======="
        while lsof -F0 "$OUTPUT" >/dev/null && [ $cout -lt 5]; do
          sleep 0.02
          ((count++))
          echo "File is opened, wait for 20ms..."
        done
        cat $OUTPUT
        
      shell: bash
